//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxcrafter.h"


// Declare the bitmap loading function
extern void wxC9ED9InitBitmapResources();

static bool bBitmapLoaded = false;


ImageFrameBaseClass::ImageFrameBaseClass(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* boxSizer1 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer1);
    
    m_notebook81 = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBK_DEFAULT);
    m_notebook81->SetName(wxT("m_notebook81"));
    
    boxSizer1->Add(m_notebook81, 0, wxALL, 5);
    
    m_panel83 = new wxPanel(m_notebook81, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    m_notebook81->AddPage(m_panel83, _("Main"), false);
    
    wxBoxSizer* boxSizer89 = new wxBoxSizer(wxVERTICAL);
    m_panel83->SetSizer(boxSizer89);
    
    wxStaticBoxSizer* staticBoxSizer49 = new wxStaticBoxSizer( new wxStaticBox(m_panel83, wxID_ANY, _("My Label")), wxHORIZONTAL);
    
    boxSizer89->Add(staticBoxSizer49, 1, wxALL|wxEXPAND, 5);
    
    m_staticBitmap51 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("file_ext_script")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap51, 0, wxALL, 5);
    
    m_staticBitmap53 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap53, 0, wxALL, 5);
    
    m_staticBitmap55 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_c")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap55, 0, wxALL, 5);
    
    m_staticBitmap57 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_code")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap57, 0, wxALL, 5);
    
    m_staticBitmap59 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_cplusplus")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap59, 0, wxALL, 5);
    
    m_staticBitmap61 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_csharp")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap61, 0, wxALL, 5);
    
    m_staticBitmap63 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_database")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap63, 0, wxALL, 5);
    
    m_staticBitmap65 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_h")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap65, 0, wxALL, 5);
    
    m_staticBitmap67 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_php")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap67, 0, wxALL, 5);
    
    m_staticBitmap69 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_ruby")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap69, 0, wxALL, 5);
    
    m_staticBitmap71 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("page_white_visualstudio")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer49->Add(m_staticBitmap71, 0, wxALL, 5);
    
    wxStaticBoxSizer* staticBoxSizer11 = new wxStaticBoxSizer( new wxStaticBox(m_panel83, wxID_ANY, _("My Label")), wxHORIZONTAL);
    
    boxSizer89->Add(staticBoxSizer11, 1, wxALL|wxEXPAND, 5);
    
    m_staticBitmap13 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("file_new_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap13, 0, wxALL, 5);
    
    m_staticBitmap15 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("file_open_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap15, 0, wxALL, 5);
    
    m_staticBitmap17 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("file_save_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap17, 0, wxALL, 5);
    
    m_staticBitmap19 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("file_saveas_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap19, 0, wxALL, 5);
    
    m_staticBitmap21 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("file_saveall_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap21, 0, wxALL, 5);
    
    m_staticBitmap23 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("undo_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap23, 0, wxALL, 5);
    
    m_staticBitmap25 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("redo_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap25, 0, wxALL, 5);
    
    m_staticBitmap27 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("cut16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap27, 0, wxALL, 5);
    
    m_staticBitmap29 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("copy_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap29, 0, wxALL, 5);
    
    m_staticBitmap31 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("paste_16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer11->Add(m_staticBitmap31, 0, wxALL, 5);
    
    wxStaticBoxSizer* staticBoxSizer35 = new wxStaticBoxSizer( new wxStaticBox(m_panel83, wxID_ANY, _("My Label")), wxHORIZONTAL);
    
    boxSizer89->Add(staticBoxSizer35, 1, wxALL|wxEXPAND, 5);
    
    m_staticBitmap37 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("AppSettings16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer35->Add(m_staticBitmap37, 0, wxALL, 5);
    
    m_staticBitmap39 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("Addin16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer35->Add(m_staticBitmap39, 0, wxALL, 5);
    
    m_staticBitmap41 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("projectTree16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer35->Add(m_staticBitmap41, 0, wxALL, 5);
    
    m_staticBitmap43 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("prop16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer35->Add(m_staticBitmap43, 0, wxALL, 5);
    
    m_staticBitmap45 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("SysHrdwr16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer35->Add(m_staticBitmap45, 0, wxALL, 5);
    
    m_staticBitmap47 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("console16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer35->Add(m_staticBitmap47, 0, wxALL, 5);
    
    m_staticBitmap101 = new wxStaticBitmap(m_panel83, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("reportBug16")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer35->Add(m_staticBitmap101, 0, wxALL, 5);
    
    m_panel85 = new wxPanel(m_notebook81, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    m_notebook81->AddPage(m_panel85, _("Modify Text"), false);
    
    wxBoxSizer* boxSizer91 = new wxBoxSizer(wxVERTICAL);
    m_panel85->SetSizer(boxSizer91);
    
    wxStaticBoxSizer* staticBoxSizer73 = new wxStaticBoxSizer( new wxStaticBox(m_panel85, wxID_ANY, _("My Label")), wxHORIZONTAL);
    
    boxSizer91->Add(staticBoxSizer73, 1, wxALL|wxEXPAND, 5);
    
    m_staticBitmap75 = new wxStaticBitmap(m_panel85, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("text_allcaps")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer73->Add(m_staticBitmap75, 0, wxALL, 5);
    
    m_staticBitmap77 = new wxStaticBitmap(m_panel85, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("text_smallcaps")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer73->Add(m_staticBitmap77, 0, wxALL, 5);
    
    m_staticBitmap79 = new wxStaticBitmap(m_panel85, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("tgle_endln")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer73->Add(m_staticBitmap79, 0, wxALL, 5);
    
    wxStaticBoxSizer* staticBoxSizer93 = new wxStaticBoxSizer( new wxStaticBox(m_panel85, wxID_ANY, _("My Label")), wxHORIZONTAL);
    
    boxSizer91->Add(staticBoxSizer93, 1, wxALL|wxEXPAND, 5);
    
    m_staticBitmap95 = new wxStaticBitmap(m_panel85, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("table_tab_search")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer93->Add(m_staticBitmap95, 0, wxALL, 5);
    
    m_staticBitmap97 = new wxStaticBitmap(m_panel85, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("search_plus")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer93->Add(m_staticBitmap97, 0, wxALL, 5);
    
    m_staticBitmap99 = new wxStaticBitmap(m_panel85, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("search_minus")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    staticBoxSizer93->Add(m_staticBitmap99, 0, wxALL, 5);
    
    m_menuBar = new wxMenuBar(0);
    this->SetMenuBar(m_menuBar);
    
    m_name6 = new wxMenu();
    m_menuBar->Append(m_name6, _("File"));
    
    m_menuItem7 = new wxMenuItem(m_name6, wxID_EXIT, _("Exit\tAlt-X"), _("Quit"), wxITEM_NORMAL);
    m_name6->Append(m_menuItem7);
    
    m_name8 = new wxMenu();
    m_menuBar->Append(m_name8, _("Help"));
    
    m_menuItem9 = new wxMenuItem(m_name8, wxID_ABOUT, _("About..."), wxT(""), wxITEM_NORMAL);
    m_name8->Append(m_menuItem9);
    
    m_mainToolbar = this->CreateToolBar(wxTB_FLAT, wxID_ANY);
    m_mainToolbar->SetToolBitmapSize(wxSize(16,16));
    
    
    #if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(m_notebook81)){
        wxPersistenceManager::Get().RegisterAndRestore(m_notebook81);
    } else {
        wxPersistenceManager::Get().Restore(m_notebook81);
    }
    #endif
    
    SetName(wxT("ImageFrameBaseClass"));
    SetSize(500,400);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
    // Connect events
    this->Connect(m_menuItem7->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(ImageFrameBaseClass::OnExit), NULL, this);
    this->Connect(m_menuItem9->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(ImageFrameBaseClass::OnAbout), NULL, this);
    
}

ImageFrameBaseClass::~ImageFrameBaseClass()
{
    this->Disconnect(m_menuItem7->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(ImageFrameBaseClass::OnExit), NULL, this);
    this->Disconnect(m_menuItem9->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(ImageFrameBaseClass::OnAbout), NULL, this);
    
}

MainFrameBase::MainFrameBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    SetName(wxT("MainFrameBase"));
    SetSize(500,300);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

MainFrameBase::~MainFrameBase()
{
}

SettingsDialogBase::SettingsDialogBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxFlexGridSizer* flexGridSizer111 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer111->SetFlexibleDirection( wxBOTH );
    flexGridSizer111->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer111->SetMinSize(100,100);
    this->SetSizer(flexGridSizer111);
    
    m_notebook113 = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxSize(800, 400), wxBK_DEFAULT);
    m_notebook113->SetName(wxT("m_notebook113"));
    
    flexGridSizer111->Add(m_notebook113, 0, wxALL, 5);
    
    m_panel115 = new wxPanel(m_notebook113, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    m_notebook113->AddPage(m_panel115, _("General"), false);
    
    wxStaticBoxSizer* staticBoxSizer119 = new wxStaticBoxSizer( new wxStaticBox(m_panel115, wxID_ANY, _("General Editor Settings")), wxHORIZONTAL);
    staticBoxSizer119->SetMinSize(350,550);
    m_panel115->SetSizer(staticBoxSizer119);
    
    m_staticText138 = new wxStaticText(m_panel115, wxID_ANY, _("Editor Font:"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    staticBoxSizer119->Add(m_staticText138, 0, wxALL, 5);
    
    wxArrayString cmbbx_fontsArr;
    cmbbx_fonts = new wxChoice(m_panel115, ID_CHOICE_FONT, wxDefaultPosition, wxSize(300,-1), cmbbx_fontsArr, 0);
    
    staticBoxSizer119->Add(cmbbx_fonts, 0, wxALL, 5);
    
    m_staticText154 = new wxStaticText(m_panel115, wxID_ANY, _("Size:"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    staticBoxSizer119->Add(m_staticText154, 0, wxALL, 5);
    
    wxArrayString cmbbx_font_sizeArr;
    cmbbx_font_size = new wxChoice(m_panel115, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), cmbbx_font_sizeArr, 0);
    
    staticBoxSizer119->Add(cmbbx_font_size, 0, wxALL, 5);
    
    m_panel117 = new wxPanel(m_notebook113, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    m_notebook113->AddPage(m_panel117, _("Colour Scheme"), false);
    
    wxGridSizer* gridSizer132 = new wxGridSizer(0, 2, 0, 0);
    
    flexGridSizer111->Add(gridSizer132, 1, wxALL|wxEXPAND, 5);
    
    wxBoxSizer* boxSizer134 = new wxBoxSizer(wxVERTICAL);
    
    gridSizer132->Add(boxSizer134, 1, wxALL|wxEXPAND, 5);
    
    wxBoxSizer* boxSizer128 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer132->Add(boxSizer128, 1, wxALL|wxEXPAND, 5);
    
    btn_OK = new wxButton(this, wxID_ANY, _("OK"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    boxSizer128->Add(btn_OK, 0, wxALL, 5);
    
    btn_apply = new wxButton(this, wxID_ANY, _("Apply"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    boxSizer128->Add(btn_apply, 0, wxALL, 5);
    
    btn_cancel = new wxButton(this, wxID_ANY, _("Cancel"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    boxSizer128->Add(btn_cancel, 0, wxALL, 5);
    
    
    #if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(m_notebook113)){
        wxPersistenceManager::Get().RegisterAndRestore(m_notebook113);
    } else {
        wxPersistenceManager::Get().Restore(m_notebook113);
    }
    #endif
    
    SetName(wxT("SettingsDialogBase"));
    SetSize(600,300);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
    // Connect events
    cmbbx_fonts->Connect(wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler(SettingsDialogBase::OnCmbbx_fontsChoiceSelected), NULL, this);
    cmbbx_font_size->Connect(wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler(SettingsDialogBase::OnCmbbx_font_sizeChoiceSelected), NULL, this);
    btn_OK->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SettingsDialogBase::OnBtn_okButtonClicked), NULL, this);
    btn_apply->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SettingsDialogBase::OnBtn_applyButtonClicked), NULL, this);
    btn_cancel->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SettingsDialogBase::OnBtn_cancelButtonClicked), NULL, this);
    
}

SettingsDialogBase::~SettingsDialogBase()
{
    cmbbx_fonts->Disconnect(wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler(SettingsDialogBase::OnCmbbx_fontsChoiceSelected), NULL, this);
    cmbbx_font_size->Disconnect(wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler(SettingsDialogBase::OnCmbbx_font_sizeChoiceSelected), NULL, this);
    btn_OK->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SettingsDialogBase::OnBtn_okButtonClicked), NULL, this);
    btn_apply->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SettingsDialogBase::OnBtn_applyButtonClicked), NULL, this);
    btn_cancel->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SettingsDialogBase::OnBtn_cancelButtonClicked), NULL, this);
    
}
